generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  name     String?
  email    String    @unique
  password String
  cash     Cash[]
  accounts Account[] @relation("AccountToUser")
  notes Notes[]
}

model Account {
  id      String @id @default(uuid())
  balance Float  @default(0)
  name    String
  cash    Cash[]
  users   User[] @relation("AccountToUser")
}

model Cash {
  id          String        @id @default(uuid())
  price       Float
  type        String
  date        DateTime      @default(now())
  userId      String?
  categoryId  String?
  description String
  accountId   String?
  account     Account?      @relation(fields: [accountId], references: [id])
  category    CashCategory? @relation(fields: [categoryId], references: [id])
  user        User?         @relation(fields: [userId], references: [id])

  @@index([accountId], map: "Cash_accountId_fkey")
  @@index([categoryId], map: "Cash_categoryId_fkey")
  @@index([userId], map: "Cash_userId_fkey")
}

model CashCategory {
  id   String @id @default(uuid())
  name String
  cash Cash[]
}

model Notes {
  id String @id @default(uuid())
  title String
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categoryId String
  category NotesCategory @relation(fields: [categoryId], references: [id])
  tags NotesTag[]
  attachments NotesAttachment[]
  userId String
  user User @relation(fields: [userId], references: [id])
}

model NotesCategory {
  id String @id @default(uuid())
  name String
  notes Notes[]
}

model NotesTag {
  id String @id @default(uuid())
  name String
  notes Notes[]
}

model NotesAttachment {
  id String @id @default(uuid())
  url String
  notes Notes @relation(fields: [notesId], references: [id])
  notesId String
}
